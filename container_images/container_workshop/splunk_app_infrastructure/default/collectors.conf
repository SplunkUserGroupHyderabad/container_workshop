# This file configures how data is collected and related in Splunk App for Infrastructure.
# Only updates to the provided configurations in this file are supported. 
# Custom collection configurations not included in this file are not supported.

[os]
title = OS Metrics Collector
source_predicate = cpu.*
title_dimension = host
identifier_dimensions = ["host"]
informational_dimensions = "*"
blacklisted_dimensions = ["punct", "val", "metric_type", "cpu", "extracted_host"]
monitoring_lag = 10
monitoring_calculation_window = 90
dimension_display_names = [ \
            {"os": {"en-us": "OS"}}, \
            {"ip": {"en-us": "IP Address"}}, \
            {"os_version": {"en-us": "Version"}} \
        ]
disabled = 0
vital_metrics = [ \
            "cpu.system", \
            "cpu.user", \
            "cpu.idle", \
            "memory.free" \
        ]
correlated_event_data = { \
            "unix_logs": { \
                "base_search": { \
                    "type": "or", \
                    "filters": [ \
                        { \
                            "type": "include", \
                            "field": "sourcetype", \
                            "values": ["*"] \
                        } \
                    ] \
                }, \
                "entity_filters": { \
                    "type": "or", \
                    "filters": [ \
                        { \
                            "event_field": "host", \
                            "dimension_name": "host" \
                        } \
                    ] \
                } \
            } \
        }

[perfmon]
title = Perfmon Metrics Collector
source_predicate = processor.*
title_dimension = host
identifier_dimensions = ["host"]
informational_dimensions = "*"
blacklisted_dimensions = ["punct", "val", "metric_type", "instance", "extracted_host", "cpu", "disk"]
monitoring_lag = 10
monitoring_calculation_window = 90
dimension_display_names = [ \
            {"os": {"en-us": "OS"}}, \
            {"ip": {"en-us": "IP Address"}}, \
            {"os_version": {"en-us": "Version"}} \
        ]
disabled = 0
vital_metrics = [ \
            "processor.%_processor_time", \
            "processor.%_user_time", \
            "memory.available_bytes", \
            "network_interface.bytes_sent/sec", \
            "network_interface.bytes_received/sec" \
        ]
correlated_event_data = { \
            "windows_logs": { \
                "base_search": { \
                    "type": "or", \
                    "filters": [ \
                        { \
                            "type": "include", \
                            "field": "sourcetype", \
                            "values": ["*"] \
                        } \
                    ] \
                }, \
                "entity_filters": { \
                    "type": "or", \
                    "filters": [ \
                        { \
                            "event_field": "host", \
                            "dimension_name": "host" \
                        } \
                    ] \
                } \
            } \
        }

[aws_cloudwatch_ec2]
title = AWS CloudWatch EC2 Metrics Collector
source_predicate = AWS/EC2*
title_dimension = InstanceId
identifier_dimensions = ["InstanceId"]
informational_dimensions = "*"
blacklisted_dimensions = ["punct", "val", "metric_type", "unit", "host"]
monitoring_lag = 10
monitoring_calculation_window = 1200
disabled = 0
dimension_display_names = [ \
            {"InstanceType": {"en-us": "Instance Type"}}, \
            {"ImageId": {"en-us": "AMI ID"}}, \
            {"region": {"en-us": "AWS Region"}}, \
            {"InstanceId": {"en-us": "Instance ID"}}, \
            {"PublicDnsName": {"en-us": "DNS Name (public)"}}, \
            {"PrivateDnsName": {"en-us": "DNS Name (private)"}}, \
            {"PublicIpAddress": {"en-us": "IP Address (public)"}}, \
            {"PrivateIpAddress": {"en-us": "IP Address (private)"}}, \
            {"Architecture": {"en-us": "Architecture"}} \
        ]
correlated_event_data = { \
            "cloudwatchlogs": { \
                "base_search": { \
                    "type": "or", \
                    "filters": [ \
                        { \
                            "type": "include", \
                            "field": "sourcetype", \
                            "values": ["aws:cloudwatchlogs"] \
                        } \
                    ] \
                }, \
                "entity_filters": { \
                    "type": "or", \
                    "filters": [ \
                        { \
                            "event_field": "source", \
                            "dimension_name": "InstanceId", \
                            "match_criteria": "partial" \
                        } \
                    ] \
                } \
            } \
        }

[aws_cloudwatch_ebs]
title = AWS CloudWatch EBS Metrics Collector
source_predicate = AWS/EBS*
title_dimension = VolumeId
identifier_dimensions = ["VolumeId"]
informational_dimensions = "*"
blacklisted_dimensions = ["punct", "val", "metric_type", "unit", "host"]
monitoring_lag = 10
monitoring_calculation_window = 1200
disabled = 0

[aws_cloudwatch_elb]
title = AWS CloudWatch ELB Metrics Collector
source_predicate = AWS/ELB*
title_dimension = LoadBalancerName
identifier_dimensions = ["LoadBalancerName"]
informational_dimensions = "*"
blacklisted_dimensions = ["punct", "val", "metric_type", "unit", "host"]
monitoring_lag = 10
monitoring_calculation_window = 1200
disabled = 0

[k8s_node]
title = Kubernetes Node Collector
source_predicate = kube.node.*
title_dimension = node
identifier_dimensions = ["node"]
informational_dimensions = "*"
blacklisted_dimensions = ["punct", "val", "metric_type", "unit", "host", "extracted_source"]
monitoring_lag = 10
monitoring_calculation_window = 600
disabled = 0
vital_metrics = [ \
            "kube.node.cpu.usage_rate", \
            "kube.node.memory.usage_bytes", \
            "kube.node.imagefs.used_bytes", \
            "kube.node.fs.used_bytes", \
            "kube.node.network.rx_bytes", \
            "kube.node.network.tx_bytes" \
        ]
correlated_event_data = { \
            "k8s_node_logs": { \
                "base_search": { \
                    "type": "and", \
                    "filters": [ \
                        { \
                            "type": "include", \
                            "field": "sourcetype", \
                            "values": ["*"] \
                        } \
                    ] \
                }, \
                "entity_filters": { \
                    "type": "or", \
                    "filters": [ \
                        { \
                            "event_field": "host", \
                            "dimension_name": "node", \
                            "char_replacement_rules": [ \
                                ["_", "*"] \
                            ] \
                        } \
                    ] \
                } \
            }, \
            "k8s_node_metadata": { \
                "base_search": { \
                    "type": "and", \
                    "filters": [ \
                        { \
                            "type": "include", \
                            "field": "sourcetype", \
                            "values": ["kube:objects:nodes"] \
                        } \
                    ] \
                }, \
                "entity_filters": { \
                    "type": "and", \
                    "filters": [ \
                        { \
                            "event_field": "metadata.name", \
                            "dimension_name": "node" \
                        } \
                    ] \
                } \
            } \
        }

[k8s_pod]
title = Kubernetes Pod Collector
source_predicate = kube.pod.*
title_dimension = pod-name
identifier_dimensions = ["pod-name", "pod-namespace"]
informational_dimensions = "*"
blacklisted_dimensions = ["punct", "val", "metric_type", "unit", "host", "extracted_source"]
monitoring_lag = 10
monitoring_calculation_window = 600
disabled = 0
vital_metrics = [ \
            "kube.pod.cpu.usage_rate", \
            "kube.pod.memory.usage_bytes", \
            "kube.pod.ephemeral-storage.used_bytes", \
            "kube.pod.volume.used_bytes", \
            "kube.pod.network.rx_bytes", \
            "kube.pod.network.tx_bytes" \
        ]
correlated_event_data = { \
            "k8s_pod_logs": { \
                "base_search": { \
                    "type": "and", \
                    "filters": [ \
                        { \
                            "type": "include", \
                            "field": "sourcetype", \
                            "values": ["kube:*"] \
                        } \
                    ] \
                }, \
                "entity_filters": { \
                    "type": "and", \
                    "filters": [ \
                        { \
                            "event_field": "pod", \
                            "dimension_name": "pod-name" \
                        }, \
                        { \
                            "event_field": "namespace", \
                            "dimension_name": "pod-namespace" \
                        } \
                    ] \
                } \
            }, \
            "k8s_pod_metadata": { \
                "base_search": { \
                    "type": "and", \
                    "filters": [ \
                        { \
                            "type": "include", \
                            "field": "sourcetype", \
                            "values": ["kube:objects:pods"] \
                        } \
                    ] \
                }, \
                "entity_filters": { \
                    "type": "and", \
                    "filters": [ \
                        { \
                            "event_field": "metadata.name", \
                            "dimension_name": "pod-name" \
                        }, \
                        { \
                            "event_field": "metadata.namespace", \
                            "dimension_name": "pod-namespace" \
                        } \
                    ] \
                } \
            } \
        }
